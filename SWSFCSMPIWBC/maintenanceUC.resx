<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>